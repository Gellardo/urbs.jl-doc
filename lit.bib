# slow explanation on p.239
@article{pyomo,
  title={Pyomo: modeling and solving mathematical programs in Python},
  author={Hart, William E and Watson, Jean-Paul and Woodruff, David L},
  journal={Mathematical Programming Computation},
  volume={3},
  number={3},
  pages={219--260},
  year={2011},
  publisher={Springer}
}

@article{jump,
	title = {{JuMP}: {A} modeling language for mathematical optimization},
	author = {Iain Dunning and Joey Huchette and Miles Lubin},
	journal = {arXiv:1508.01982 [math.OC]},
	year = {2015},
	url = {http://arxiv.org/abs/1508.01982}
}

@article{julia,
	Abstract = {Dynamic languages have become popular for scientific computing. They are generally considered highly productive, but lacking in performance. This paper presents Julia, a new dynamic language for technical computing, designed for performance from the beginning by adapting and extending modern programming language techniques. A design based on generic functions and a rich type system simultaneously enables an expressive programming model and successful type inference, leading to good performance for a wide range of programs. This makes it possible for much of the Julia library to be written in Julia itself, while also incorporating best-of-breed C and Fortran libraries.},
	Eprinttype = {arXiv},
	Author = {Jeff Bezanson and Stefan Karpinski and Viral B. Shah and Alan Edelman},
	Eprint = {1209.5145},
	Month = {September},
	Eprintclass = {cs.PL},
	Title = {{J}ulia: A Fast Dynamic Language for Technical Computing},
	Year = {2012}
}

